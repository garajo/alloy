@import '../sass-image';

// Flags
$theme-light:           false;

// BEGIN: Standard color palette: Caranu spec pg. 17

// Gray scale colors
$french-gray:           #B8BABF;
$mountain-mist:         #919499;
$paynes-gray:           #424347;
$shark:                 #34343B;
$jaguar:                #2A2A30;
$black-russian:         #25252B;
$dark-jungle:           #1B1B1F;

//Typically semi-transparent colors
$glitter:               #E5EEFF;

// Blue colors
$cornflower-blue:       #4C8EFF;
$jacksons-purple:       #2E4585;

// END: Standard color palette: Caranu spec pg. 17

//Opacity: Variables for opacity straight out of the Caranu spec. Those opacity values used heavily enough in the Dark skin to warrant their own variables. Tired of doing hex/decimal conversion.
$opacity-HEXB2:          0.70;
$opacity-HEX99:          0.60;
$opacity-HEX7F:          0.50;
$opacity-HEX66:          0.40;
$opacity-HEX4C:          0.30;
$opacity-HEX3F:          0.25;
$opacity-HEX33:          0.20;
$opacity-HEX28:          0.16;
$opacity-HEX19:          0.10;
$opacity-HEX14:          0.08;
$opacity-HEX0F:          0.06;
$opacity-HEX07:          0.03;

$opacity-DEC30:          0.3;
$opacity-DEC60:          0.6;

body {
	background:	    $dark-jungle;
	color:	            $french-gray;
}

$color-palette: (
        primary-lightest:                         $french-gray,
        primary-lighter:                          $mountain-mist,
        primary-light:                            $paynes-gray,
        primary:                                  $shark,
        primary-dark:                             $jaguar,
        primary-darker:                           $black-russian,
        primary-darkest:                          $dark-jungle,

        secondary:                                $cornflower-blue,
        secondary-dark:                           $jacksons-purple,

        // Expanders
        expander-button-bg-hover:                 rgba($glitter,$opacity-HEX14),

        // Typography (arbitrary)
        // Most controls define/control their own font color/family etc. with their own control specific vars for flexibility. For arbitrary text uses these vars so as not to confuse/mix semantics
        text-color-default:                       $french-gray,
        text-color-alternate:                     $white,

        // Containers
        header-bg:                                $paynes-gray,
        header-text:                              $white,
        section-bg:                               $french-gray,

        // Group box
        group-box-border:                         rgba($glitter,$opacity-HEX28),
        group-box-header-text:                    $white,

        // Windows
        window-bg:                                $dark-jungle,                         //Caranu spec. pg. 34 FILL = #FF1B1B1F NOTE: An app main window does not have the blue border. Only if it has MDI windows would the "active" window get the blue border
        window-main-bg:                           $paynes-gray,                         //Listed on pg. 17 on the spec as the color behind child windows in a main window.
        window-border:                            rgba($glitter,$opacity-HEX28),        //Caranu spec. pg. 34 BORDER = #28E5EEFF
        window-box-shadow:                        rgba($black,$opacity-HEX7F),          //JEFF_TODO: There are no class/styles for windows. When they are created use this var for the shadow. Caranu spec. pg. 34 Shadow = v-offset 1px, blur 8px, #7F000000
                                                                                        //Example of how to use this box shadow var as a value of the box-shadow property until we get a full window style made                                                                      //box-shadow: 0 2px 8px 0 map_get($color-palette,  window-box-shadow);
        // Title Bar
        title-bar-gradient-top:                   $jaguar,
        title-bar-gradient-bottom:                $black-russian,
        title-bar-border-bottom:                  rgba($black,$opacity-HEX99),
        title-bar-box-shadow:                     rgba($black,$opacity-HEX7F),          //JEFF_REVIEW: not sure why this one was originally set to .45 opacity. Caranu spec pg. 47 clearly calls for the box shadow to be #7F opacity which is .50
        text-title-color:                         $white,
        button-close-x-hover-bg:                  #E03030,
        button-close-x-active-bg:                 #541313,
        button-close-x-active-box-shadow:         #2B0A0A,
        button-min-max-hover-bg:                  rgba($glitter,$opacity-HEX14),
        button-min-max-active-bg:                 rgba($black,$opacity-HEX19),
        button-min-max-active-box-shadow:         rgba($black,$opacity-HEX4C),

        // Menus
        menu-title-color:                         $french-gray,
        menu-title-hover-bg:                      rgba($glitter,$opacity-HEX14),
        menu-title-active-bg:                     $jaguar,
        menu-border-active:                       rgba($black,$opacity-HEX4C),
        menu-border-inset-active:                 rgba($white,$opacity-HEX14),
        menu-shadow-active:                       rgba($black,$opacity-HEX7F),
        menu-shadow-inset-active:                 rgba($white,$opacity-HEX14),
        menu-text-active-color:                   $white,
        menu-text-color:                          $white,
        menu-divider-color:                       $black,
        menu-hover-bg:                            rgba($glitter,$opacity-HEX14),
        menu-active-bg:                           $cornflower-blue,

        // Tabs
        tab-bar-bg:                               $jaguar,
        tab-bar-border:                           rgba($black,$opacity-HEX66),
        tab-bar-shadow:                           rgba($white,$opacity-HEX14),
        tab-bg-hover:                             rgba($glitter,$opacity-HEX14),
        tab-text-color-hover:                     $french-gray,
        tab-text-color-active:                    $white,
        // -- Nav Tabs
        nav-tab-title-active-gradient-top:        #48484F,                            //infrequently used one off (non standard) color; usually for active tab states
        nav-tab-title-active-gradient-bottom:     #414147,                            //infrequently used one off (non standard) color; usually for active tab states
        nav-tab-border-active:                    rgba($black,$opacity-HEX99),
        nav-tab-bar-gradient-top:                 #414147,                            //infrequently used one off (non standard) color; usually for active tab states
        nav-tab-bar-gradient-bottom:              #3B3B41,                            //infrequently used one off (non standard) color; usually for active tab states
        nav-tab-text-color:                       $white,
        nav-tab-with-icon-text-color:             $french-gray,
        nav-tab-with-icon-text-color-active:      $white,

        // Toolbar
        toolbar-shadow-inset-top:                 rgba($white,$opacity-HEX14),
        toolbar-shadow-inset-bottom:              rgba($black,$opacity-HEX4C),
        toolbar-shadow:                           rgba($black,$opacity-HEX7F),
        toolbar-group-separator:                  rgba($black,$opacity-HEX66),
        button-toolbar-label-color:               $white,
        button-toolbar-hover-bg:                  rgba($glitter,$opacity-HEX14),
        button-toolbar-active-bg:                 rgba($black,$opacity-HEX19),
        button-toolbar-active-border:             rgba($black,$opacity-HEX4C),
        // AJM: Checked states are placeholders until we can toggle icon colors on-the-fly (pg 45)
        button-toolbar-checked-bg:                rgba($cornflower-blue,$opacity-HEX4C),
        button-toolbar-checked-hover-bg:          rgba($cornflower-blue,$opacity-HEX7F),
        button-split-group-hover-bg:              rgba($glitter,0.05),                  //Caranu spec pg. 45 is the only spot that has this 0.05/#0C opacity. Let's consider it a one off and not promote it to a var for undo attention.
        button-split-group-divider:               rgba($white,$opacity-HEX28),

        // Quick Access Toolbar
        button-quick-access-hover-bg:             rgba($glitter,$opacity-HEX14),
        button-quick-access-active-border:        rgba($black,$opacity-HEX19),
        button-quick-access-active-bg:            rgba($black,$opacity-HEX4C),
        button-quick-access-disabled-opacity:     $opacity-DEC30,
        button-quick-access-disabled-text-color:  $white,
        quick-access-group-box-border:            rgba($glitter,$opacity-HEX28),
        quick-acess-group-box-bg:                 rgba($black,$opacity-HEX19),

        // Buttons

        // -- Standard
        button-standard-color:                    $white,
        button-standard-gradient-top:             $shark,
        button-standard-gradient-bottom:          $jaguar,
        button-standard-shadow-inset:             rgba($white,$opacity-HEX14),
        button-standard-shadow:                   rgba($black,$opacity-HEX3F),
        button-standard-hover-gradient-top:       #3F3F46,                           //infrequently used one off (non standard) color; usually for control hover states
        button-standard-hover-gradient-bottom:    #36373D,                           //infrequently used one off (non standard) color; usually for control hover states
        button-standard-hover-shadow-inset:       rgba($white,$opacity-HEX28),
        button-standard-active-bg:                $cornflower-blue,
        button-standard-active-color:             $white,
        button-standard-checked-color:            $white,
        button-standard-checked-bg:               $jacksons-purple,
        button-standard-checked-hover-bg:         #455fa8,    // AJM: This is a placeholder, need official toggled hover spec
        button-standard-checked-shadow-inset:     rgba($white,$opacity-HEX28),
        button-standard-disabled-opacity:         $opacity-DEC30,                      //leave disabled opacity in decimal since the Caranu spec does
        button-standard-disabled-text-color:      $white,
        // -- Default
        button-default-border-inset:              rgba($cornflower-blue,$opacity-HEX7F),
        button-default-shadow-inset:              rgba($cornflower-blue,$opacity-HEX7F),
         //AJM: The spec 14 (8%) makes it darker since it allows more of the dark button through.  B2(70%) is closer to the intended look.
        button-default-hover-border-inset:        rgba($cornflower-blue,$opacity-HEX14),
        button-default-hover-border-fixed:        rgba($cornflower-blue,$opacity-HEXB2),
        button-default-hover-shadow-inset:        rgba($white,$opacity-HEX28),
        // -- Dropdown
        button-dropdown-color:                    $white,
        // -- Dropdown Lightweight
        button-dropdown-lightweight-color:        $french-gray,
        button-dropdown-lightweight-color-hover:  $white,
        button-dropdown-lightweight-color-active: $cornflower-blue,

        // Input
        input-text-disabled-opacity:              $opacity-DEC30,                          //leave disabled opacity in decimal since the Caranu spec does
        input-text-border:                        rgba($glitter,$opacity-HEX4C),
        input-text-bg:                            rgba($black,$opacity-HEX33),
        input-text-color:                         $white,
        input-text-border-hover:                  $mountain-mist,
        input-text-border-active:                 $cornflower-blue,
        input-text-bg-active:                     rgba(#212733,$opacity-HEX99),         //JEFF_TODO: according to Caranu spec this color should be applied to this the background of a focus/active textbox (pg. 22) but also to the background of the active combobox (pg. 23)
        input-text-bg-error:                      #2B0A0A,
        input-text-border-error:                  #E03030,
        input-text-highlight-bg:                  $jacksons-purple,
        input-text-disabled-color:                $white,
        input-text-placeholder-color:             $french-gray,

        // -- Radios
        radio-border:                             $french-gray,
        radio-border-hover:                       $white,
        radio-checked-bg:                         $cornflower-blue,
        radio-disabled:                           rgba($mountain-mist,$opacity-HEX4C),

        // -- Switch (based on switch addendum)
        switch-border:                            $mountain-mist,
        switch-border-hover:                      $white,
        switch-bg:                                rgba($black,$opacity-HEX33),
        switch-bg-checked:                        $cornflower-blue,
        switch-bg-checked-hover:                #6FB3FF,
        switch-bg-pressed:                        $mountain-mist,

        switch-thumb-bg:                          $mountain-mist,
        switch-thumb-bg-hover:                    $white,
        switch-thumb-bg-checked:                  $white,
        switch-thumb-bg-checked-hover:            $white,
        switch-thumb-bg-pressed:                  $white,
        switch-disabled-opacity:                  0.52,


        // -- Combo box
        button-dropdown-combo-bg:                 rgba($black,$opacity-HEX33),
        button-dropdown-combo-bg-hover:           rgba($glitter,$opacity-HEX14),
        button-dropdown-combo-border:             rgba($glitter,$opacity-HEX4C),
        button-dropdown-combo-border-hover:       $mountain-mist,

        // -- Spin
        button-spin-gradient-top:                 $shark,
        button-spin-gradient-bottom:              $jaguar,
        button-spin-border:                       rgba($glitter,$opacity-HEX4C),
        button-spin-gradient-top-hover:           #3F3F46,                            //infrequently used one off (non standard) color; usually for control hover states
        button-spin-gradient-bottom-hover:        #36373D,                            //infrequently used one off (non standard) color; usually for control hover states
        button-spin-bg-active:                    $cornflower-blue,
        button-spin-opacity-disabled:             $opacity-DEC30,                       //leave disabled opacity in decimal since the Caranu spec does

        // Tree View
        list-item-color:                          $french-gray,
        list-item-bg-hover:                       rgba($glitter,$opacity-HEX14),
        list-item-bg-focus:                       rgba($glitter,$opacity-HEX28),
        list-item-bg-active:                      $jacksons-purple,

        // Data Grid
        data-grid-border:                         rgba($glitter,$opacity-HEX28),
        data-grid-header-top-gradient:            $jaguar,
        data-grid-header-bottom-gradient:         $black-russian,
        data-grid-color:                          $french-gray,
        data-grid-color-highlighted:              #85C2FF,                           //Caranu spec pg. 31 infrequently used one off (non standard) color; for the blue text of a datagrid row; mean to be distinguishable from the cornflower blue of the selected row behind it
        data-grid-row-bg-hover:                   rgba($glitter,$opacity-HEX14),
        data-grid-row-bg-active:                  $jacksons-purple,
        data-grid-row-stripe-bg:                  rgba($white,$opacity-HEX07),
        data-grid-stripe-border:                  rgba($white,$opacity-HEX0F),

        // Progress bar
        progress-bar-background:                  rgba($glitter,$opacity-HEX28),
        progress-bar-color:                       $cornflower-blue,
        progress-ring-color:                      $cornflower-blue,

        // Property Panel
        panel-bg:                                 #2D2D33,                           //JEFF_TODO Caranu spec pg. 32 Not a standard color but is supposed to be used in a property panel active tab and container background. Need to figure out why it's not being applied to the active tab
        panel-tabs-shadow:                        rgba($black,$opacity-HEX66),
        panel-tab-bar-bg:                         $black-russian,
        panel-header-color:                       $white,
        panel-border:                             rgba($black,$opacity-HEX66),
        panel-top-border:                         rgba($white,$opacity-HEX14),
        panel-splitter-bg:                        rgba($glitter,$opacity-HEX28),
        panel-splitter-border:                    rgba($black,$opacity-HEX66),
        panel-splitter-bg-hover:                  rgba($glitter,$opacity-HEX4C),
        panel-splitter-border-hover:              rgba($glitter,$opacity-HEX14),
        panel-separator:                          rgba($glitter,$opacity-HEX28),

        // Property Grid
        grid-title-color:                         $white,
        grid-search-placeholder-color:            $french-gray,
        grid-item-darkened-opacity:               $opacity-DEC30,                      //leave disabled opacity in decimal since the Caranu spec does
        propgrid-item-darkened-opacity:           $opacity-DEC60,                      //JEFF_TODO Need to rename this to reflect a style for read only properties of the property grid. Need to create a separate group for the property grid specific vars.

        // Scrollbars
        scrollbar-track-bg:                       $jaguar,
        scrollbar-track-border:                   rgba($black,$opacity-HEX66),
        scrollbar-thumb-bg:                       rgba($mountain-mist,$opacity-HEX7F),
        scrollbar-thumb-bg-hover:                 $mountain-mist,
        scrollbar-thumb-bg-active:                $white,
        scrollbar-button-bg-hover:                rgba($glitter,$opacity-HEX14),
        scrollbar-button-bg-active:               $cornflower-blue,

        // Styleguide
        style-guide-switch-label-color:           $white,
        style-guide-buttons-bg:                   transparent,
        style-guide-label-color:                  $french-gray,

        style-guide-default-bg:                   #1A1A1E,              //JEFF_TODO: this color doesn't show up in the Caranu spec at all. Why is it here? It has been mistakenly set as the content background on any app that has been using the "tabs-content content" combination
        style-guide-spacer-bg:                    $shark,

        // Dialog
        // JEFF_TODO If it is a modeless inactive dialog the text shouldn't be blue (should be #28E5EEFF) See pg. 27 Caranu spec
        dialog-border-color:                      $cornflower-blue,
        dialog-background-color:                  $dark-jungle,
        dialog-body-color:                        $french-gray,
        dialog-box-shadow:                        rgba(#0D1E40, $opacity-HEXB2),
        // JEFF_TODO If it is a modeless inactive dialog the text shouldn't be blue (should be white) See pg. 27 Caranu spec
        dialog-title-bar-color:                   $cornflower-blue,
        dialog-title-bar-gradient-top:            $jaguar,
        dialog-title-bar-gradient-bottom:         $black-russian,
        dialog-title-bar-border-bottom:           rgba($black, $opacity-HEX99),

        // Textarea
        textarea-text-border:                     rgba($glitter,$opacity-HEX4C),
        textarea-text-bg:                         rgba($black,$opacity-HEX33),
        textarea-text-color:                      $white,
        textarea-text-border-hover:               $mountain-mist,
        textarea-text-border-active:              $cornflower-blue,
        textarea-text-bg-active:                  rgba(#212733,$opacity-HEX99),         //JEFF_TODO: according to Caranu spec this color should be applied to this the background of a focus/active textbox (pg. 22) but also to the background of the active combobox (pg. 23)
        textarea-text-bg-error:                   #2B0A0A,
        textarea-text-border-error:               #E03030,
        textarea-text-highlight-bg:               $jacksons-purple,
        textarea-text-disabled-opacity:           $opacity-DEC30,                        //leave disabled opacity in decimal since the Caranu spec does
        textarea-text-disabled-color:             $white,
        textarea-text-placeholder-color:          $french-gray,

        // notification Icon
        notification-icon-body:                   $white,
        notification-icon-ellipse:                $cornflower-blue,

        // Wizard
        wizard-tab-edge-normal:                   rgba($glitter,$opacity-HEX28),
        wizard-tab-active:                        $cornflower-blue,
        wizard-tab-active-hover:                  #7AABFF,  // AJM: Missing state in spec, slight white bias to cornflower-blue
        wizard-tab-text-active:                   $black,
        wizard-tab-button-visited:                rgba($glitter,$opacity-HEX28),
        wizard-tab-edge-visited:                  $cornflower-blue,
        wizard-tab-hover:                         rgba($glitter,$opacity-HEX14),
        wizard-footer-top-border:                 rgba($glitter,$opacity-HEX28),

        // Default properties and values that are shared by many/most controls
        control-default-focus-color:              $cornflower-blue,
        control-default-disabled-opacity:         $opacity-DEC30,
        control-default-readonly-opacity:         $opacity-DEC60
);

// Images & Icons
// Relative to `./src/images`
$icons:                 "icons";
$dark-icons:            "dark/icons";

$icon-pack: (

        // *** Just going to alpha sort all the new/updated icons. Easier to find things

        add-bookmark:                         inline-image("#{$dark-icons}/icon_add_bookmark_white.svg"),
        // JEFF_TODO bow-arrow names need to be fixed
        bow-arrow-down:                       inline-image("#{$dark-icons}/icon_arrow_down_white.svg"),
        // This bow-arrow-up icon is created by rotating bow-arrow-down 180 degrees in the class/style
        // bow-arrow-up:                         inline-image("#{$dark-icons}/icon_arrow_down_white.svg"),
        autorange:                            inline-image("#{$dark-icons}/icon_autorange_white.svg"),
        autoscale-x:                          inline-image("#{$dark-icons}/icon_autoscale_x_white.svg"),
        autoscale-xy:                         inline-image("#{$dark-icons}/icon_autoscale_xy_white.svg"),
        autoscale-y:                          inline-image("#{$dark-icons}/icon_autoscale_y_white.svg"),
        back:                                 inline-image("#{$dark-icons}/icon_back_white.svg"),
        backspace:                            inline-image("#{$dark-icons}/icon_backspace_white.svg"),
        band-power:                           inline-image("#{$dark-icons}/icon_band_power_white.svg"),
        base-station:                         inline-image("#{$dark-icons}/icon_base_station_white.svg"),
        bookmark:                             inline-image("#{$dark-icons}/icon_bookmark_white.svg"),
        calendar:                             inline-image("#{$dark-icons}/icon_calendar_white.svg"),
        channel-mode-selector:                inline-image("#{$dark-icons}/icon_channel_mode_selector_white.svg"),
        chart-bubble:                         inline-image("#{$dark-icons}/icon_chart_bubble_white.svg"),
        chart-line:                           inline-image("#{$dark-icons}/icon_chart_line_white.svg"),
        chart-pareto:                         inline-image("#{$dark-icons}/icon_chart_pareto_white.svg"),
        chart-trend:                          inline-image("#{$dark-icons}/icon_chart_trend_white.svg"),
        close-file:                           inline-image("#{$dark-icons}/icon_close_file_white.svg"),
        collapse-all:                         inline-image("#{$dark-icons}/icon_collapse_all_white.svg"),
        collapse:                             inline-image("#{$dark-icons}/icon_collapse_white.svg"),
        copy:                                 inline-image("#{$dark-icons}/icon_copy_white.svg"),
        cut:                                  inline-image("#{$dark-icons}/icon_cut_white.svg"),
        data-from-hardware:                   inline-image("#{$dark-icons}/icon_data_from_hardware_white.svg"),
        data-from-recording:                  inline-image("#{$dark-icons}/icon_data_from_recording_white.svg"),
        debug:                                inline-image("#{$dark-icons}/icon_debug_white.svg"),
        disconnect:                           inline-image("#{$dark-icons}/icon_disconnect_white.svg"),
        dock:                                 inline-image("#{$dark-icons}/icon_dock_white.svg"),
        document:                             inline-image("#{$dark-icons}/icon_document_white.svg"),
        download:                             inline-image("#{$dark-icons}/icon_download_white.svg"),
        duplicate-window:                     inline-image("#{$dark-icons}/icon_duplicate_window_white.svg"),
        edit:                                 inline-image("#{$dark-icons}/icon_edit_white.svg"),
        ellipsis:                             inline-image("#{$dark-icons}/icon_ellipsis_white.svg"),
        exit:                                 inline-image("#{$dark-icons}/icon_exit_white.svg"),
        expand-all:                           inline-image("#{$dark-icons}/icon_expand_all_white.svg"),
        expand-all-hover:                     inline-image("#{$dark-icons}/icon_expand_all_hover_white.svg"),
        expand:                               inline-image("#{$dark-icons}/icon_expand_white.svg"),
        expand-hover:                         inline-image("#{$dark-icons}/icon_expand_hover_white.svg"),
        export:                               inline-image("#{$dark-icons}/icon_export_white.svg"),
        fast-forward:                         inline-image("#{$dark-icons}/icon_fast_forward_white.svg"),
        fast-rewind:                          inline-image("#{$dark-icons}/icon_fast_rewind_white.svg"),
        filter:                               inline-image("#{$dark-icons}/icon_filter_white.svg"),
        fit-to-screen:                        inline-image("#{$dark-icons}/icon_fit_to_screen_white.svg"),
        float:                                inline-image("#{$dark-icons}/icon_float_white.svg"),
        folder:                               inline-image("#{$dark-icons}/icon_folder_white.svg"),
        fullscreen-off:                       inline-image("#{$dark-icons}/icon_fullscreen_off_white.svg"),
        fullscreen-on:                        inline-image("#{$dark-icons}/icon_fullscreen_on_white.svg"),
        getting-started:                      inline-image("#{$dark-icons}/icon_getting_started_white.svg"),
        graph:                                inline-image("#{$dark-icons}/icon_graph_white.svg"),
        help:                                 inline-image("#{$dark-icons}/icon_help_white.svg"),
        home:                                 inline-image("#{$dark-icons}/icon_home_white.svg"),
        import:                               inline-image("#{$dark-icons}/icon_import_white.svg"),
        information:                          inline-image("#{$dark-icons}/icon_information_white.svg"),
        instrument-available:                 inline-image("#{$dark-icons}/icon_instrument_available_white.svg"),
        instrument-not-available:             inline-image("#{$dark-icons}/icon_instrument_not_available_white.svg"),
        keyboard:                             inline-image("#{$dark-icons}/icon_keyboard_white.svg"),
        license:                              inline-image("#{$dark-icons}/icon_license_white.svg"),
        lightning-bolt:                       inline-image("#{$dark-icons}/icon_lightning_bolt_white.svg"),
        link-selector:                        inline-image("#{$dark-icons}/icon_link_selector_white.svg"),
        locked:                               inline-image("#{$dark-icons}/icon_locked_white.svg"),
        marker:                               inline-image("#{$dark-icons}/icon_marker_white.svg"),
        marker-hide-all:                      inline-image("#{$dark-icons}/icon_marker_hide_all_white.svg"),
        marker-peak-higher:                   inline-image("#{$dark-icons}/icon_marker_peak_higher_white.svg"),
        marker-peak-left:                     inline-image("#{$dark-icons}/icon_marker_peak_left_white.svg"),
        marker-peak-lower:                    inline-image("#{$dark-icons}/icon_marker_peak_lower_white.svg"),
        marker-peak-minimum:                  inline-image("#{$dark-icons}/icon_marker_peak_minimum_white.svg"),
        marker-peak-right:                    inline-image("#{$dark-icons}/icon_marker_peak_right_white.svg"),
        marker-peak-search:                   inline-image("#{$dark-icons}/icon_marker_peak_search_white.svg"),
        menu:                                 inline-image("#{$dark-icons}/icon_menu_white.svg"),
        minus:                                inline-image("#{$dark-icons}/icon_minus_white.svg"),
        mobile-base-station:                  inline-image("#{$dark-icons}/icon_mobile_base_station_white.svg"),
        mobile-station:                       inline-image("#{$dark-icons}/icon_mobile_station_white.svg"),
        multi-window-arrange:                 inline-image("#{$dark-icons}/icon_multi_window_arrange_white.svg"),
        network-connection:                   inline-image("#{$dark-icons}/icon_network_connection_white.svg"),
        new-document:                         inline-image("#{$dark-icons}/icon_new_document_white.svg"),
        new-folder:                           inline-image("#{$dark-icons}/icon_new_folder_white.svg"),
        new-library-file:                     inline-image("#{$dark-icons}/icon_new_library_file_white.svg"),
        next:                                 inline-image("#{$dark-icons}/icon_next_white.svg"),
        not-pinned:                           inline-image("#{$dark-icons}/icon_not_pinned_white.svg"),
        notification-badge:                   inline-image("#{$dark-icons}/icon_notification_badge_white.svg"),
        notification-badge-large:             inline-image("#{$dark-icons}/icon_notification_badge_large_white.svg"),
        notification:                         inline-image("#{$dark-icons}/icon_notification_white.svg"),
        notification-error-list:              inline-image("#{$dark-icons}/icon_notification_error_list_white.svg"),
        numberpad:                            inline-image("#{$dark-icons}/icon_numberpad_white.svg"),
        open-file:                            inline-image("#{$dark-icons}/icon_open_file_white.svg"),
        open-lab-setup:                       inline-image("#{$dark-icons}/icon_open_lab_setup_white.svg"),
        orientation-xy:                       inline-image("#{$dark-icons}/icon_orientation_xy_white.svg"),
        orientation-xz:                       inline-image("#{$dark-icons}/icon_orientation_xz_white.svg"),
        orientation-yz:                       inline-image("#{$dark-icons}/icon_orientation_yz_white.svg"),
        output:                               inline-image("#{$dark-icons}/icon_output_white.svg"),
        page-down:                            inline-image("#{$dark-icons}/icon_page_down_white.svg"),
        page-up:                              inline-image("#{$dark-icons}/icon_page_up_white.svg"),
        paste:                                inline-image("#{$dark-icons}/icon_paste_white.svg"),
        pause:                                inline-image("#{$dark-icons}/icon_pause_white.svg"),
        pinned:                               inline-image("#{$dark-icons}/icon_pinned_white.svg"),
        play-beginning:                       inline-image("#{$dark-icons}/icon_play_beginning_white.svg"),
        play-end:                             inline-image("#{$dark-icons}/icon_play_end_white.svg"),
        play-with-debug:                      inline-image("#{$dark-icons}/icon_play_with_debug_white.svg"),
        plus:                                 inline-image("#{$dark-icons}/icon_plus_white.svg"),
        pointer:                              inline-image("#{$dark-icons}/icon_pointer_white.svg"),
        presets-menu:                         inline-image("#{$dark-icons}/icon_presets_menu_white.svg"),
        previous:                             inline-image("#{$dark-icons}/icon_previous_white.svg"),
        print:                                inline-image("#{$dark-icons}/icon_print_white.svg"),
        property-panel:                       inline-image("#{$dark-icons}/icon_property_panel_white.svg"),
        radiation-pattern:                    inline-image("#{$dark-icons}/icon_radiation_pattern_white.svg"),
        recent:                               inline-image("#{$dark-icons}/icon_recent_white.svg"),
        recording-full-time:                  inline-image("#{$dark-icons}/icon_recording_full_time_white.svg"),
        recording-loop-at-end:                inline-image("#{$dark-icons}/icon_recording_loop_at_end_white.svg"),
        recording-set-start:                  inline-image("#{$dark-icons}/icon_recording_set_start_white.svg"),
        recording-set-stop:                   inline-image("#{$dark-icons}/icon_recording_set_stop_white.svg"),
        redo:                                 inline-image("#{$dark-icons}/icon_redo_white.svg"),
        refresh:                              inline-image("#{$dark-icons}/icon_refresh_white.svg"),
        rf-emitting:                          inline-image("#{$dark-icons}/icon_rf_emitting_white.svg"),
        save-as:                              inline-image("#{$dark-icons}/icon_save_as_white.svg"),
        save:                                 inline-image("#{$dark-icons}/icon_save_white.svg"),
        search:                               inline-image("#{$dark-icons}/icon_search_white.svg"),
        select-area:                          inline-image("#{$dark-icons}/icon_select_area_white.svg"),
        self-diagnostic:                      inline-image("#{$dark-icons}/icon_self_diagnostic_white.svg"),
        settings-repair:                      inline-image("#{$dark-icons}/icon_settings_repair_white.svg"),
        sound:                                inline-image("#{$dark-icons}/icon_sound_white.svg"),
        sound-muted:                          inline-image("#{$dark-icons}/icon_sound_muted_white.svg"),
        stations:                             inline-image("#{$dark-icons}/icon_stations_white.svg"),
        sweep-continuous:                     inline-image("#{$dark-icons}/icon_sweep_continuous_white.svg"),
        sweep-single:                         inline-image("#{$dark-icons}/icon_sweep_single_white.svg"),
        sync:                                 inline-image("#{$dark-icons}/icon_sync_white.svg"),
        time-gate:                            inline-image("#{$dark-icons}/icon_time_gate_white.svg"),
        tools:                                inline-image("#{$dark-icons}/icon_tools_white.svg"),
        trash-can:                            inline-image("#{$dark-icons}/icon_trash_can_white.svg"),
        undo:                                 inline-image("#{$dark-icons}/icon_undo_white.svg"),
        unlocked:                             inline-image("#{$dark-icons}/icon_unlocked_white.svg"),
        update-firmware:                      inline-image("#{$dark-icons}/icon_update_firmware_white.svg"),
        updates-check-for:                    inline-image("#{$dark-icons}/icon_updates_check_for_white.svg"),
        USB:                                  inline-image("#{$dark-icons}/icon_USB_white.svg"),
        use-tabbed-dialog:                    inline-image("#{$dark-icons}/icon_use_tabbed_dialog_white.svg"),
        user-profile:                         inline-image("#{$dark-icons}/icon_user_profile_white.svg"),
        web-link:                             inline-image("#{$dark-icons}/icon_web_link_white.svg"),
        window-close:                         inline-image("#{$dark-icons}/icon_window_close_white.svg"),
        window-maximize:                      inline-image("#{$dark-icons}/icon_window_maximize_white.svg"),
        window-minimize:                      inline-image("#{$dark-icons}/icon_window_minimize_white.svg"),
        window-restore:                       inline-image("#{$dark-icons}/icon_window_restore_white.svg"),
        x-times-fast-forward:                 inline-image("#{$dark-icons}/icon_x_times_fast_forward_white.svg"),
        x-times-fast-rewind:                  inline-image("#{$dark-icons}/icon_x_times_fast_rewind_white.svg"),
        zoom-in:                              inline-image("#{$dark-icons}/icon_zoom_in_white.svg"),
        zoom-out:                             inline-image("#{$dark-icons}/icon_zoom_out_white.svg"),



        // *** Colored (non monochrome) icons have their own alpha sorted list

        condition-ok:                         inline-image("#{$icons}/icon_condition_ok_colored.svg"),
        cumulative-history:                   inline-image("#{$icons}/icon_cumulative_history_colored.svg"),
        delete:                               inline-image("#{$icons}/icon_delete_colored.svg"),
        digital-persistence:                  inline-image("#{$icons}/icon_digital_persistence_colored.svg"),
        error:                                inline-image("#{$icons}/icon_error_colored.svg"),
        play:                                 inline-image("#{$icons}/icon_play_colored.svg"),
        play_single_step:                     inline-image("#{$icons}/icon_play_single_step_colored.svg"),
        record:                               inline-image("#{$icons}/icon_record_colored.svg"),
        spectogram:                           inline-image("#{$icons}/icon_spectogram_colored.svg"),
        status-okay:                          inline-image("#{$icons}/icon_status_okay_colored.svg"),
        stop:                                 inline-image("#{$icons}/icon_stop_colored.svg"),
        warning:                              inline-image("#{$icons}/icon_warning_colored.svg"),



        // *** Logo/branding stuff deserves its own section. Let's not lose these uber important branded icons in the sea of general icons

        keysight-logo-icon:                   inline-image("#{$icons}/keysight-logo-icon.png"),
        keysight-logo:                        inline-image("#{$dark-icons}/keysight-logo.png"),
        keysight-logo-pathwave:               inline-image("#{$dark-icons}/keysight-logo-pathwave.svg"),
        keysight-logo-signature:              inline-image("#{$dark-icons}/keysight-logo-signature.png"),



        // *** JEFF_TODO Older icons need to be updated. Request svgs from icon team.

        computer:                             inline-image("#{$dark-icons}/computer.svg"),



        // *** Junk leftover from original UPro placehoder icons. Many/most are being used but need to be replaced with some official from Caranu/Alloy

        // Menus
        ph-menu-box:                          inline-image("#{$dark-icons}/ph-menu-box.png"),

        // Toolbar
        ph-toolbar-box:                       inline-image("#{$dark-icons}/ph-toolbar-box.png"),
        ph-toolbar-box-active:                inline-image("#{$dark-icons}/ph-toolbar-box-active.png"),

        // Dropdowns
        caret-down:                           inline-image("#{$dark-icons}/caret-down.png"),
        caret-down-hover:                     inline-image("#{$dark-icons}/caret-down-hover.png"),
        caret-down-active:                    inline-image("#{$dark-icons}/caret-down-hover.png"),
        caret-down-alt-active:                inline-image("#{$icons}/caret-down-alt-active.png"),

        // -- Checkboxes
        checkbox:                             inline-image("#{$dark-icons}/checkbox.png"),
        checkbox-hover:                       inline-image("#{$dark-icons}/checkbox-hover.png"),
        checkbox-checked:                     inline-image("#{$dark-icons}/checkbox-checked.png"),
        checkbox-checked-error:               inline-image("#{$icons}/checkbox-checked-error.png"),
        checkbox-error:                       inline-image("#{$icons}/checkbox-error.png"),
        checkbox-hover-error:                 inline-image("#{$icons}/checkbox-hover-error.png"),
        checkbox-ind:                         inline-image("#{$dark-icons}/checkbox-ind.svg"),
        checkbox-ind-hover:                   inline-image("#{$dark-icons}/checkbox-ind-hover.svg"),

        // -- Radio
        radio:                                inline-image("#{$dark-icons}/radio.png"),
        radio-hover:                          inline-image("#{$dark-icons}/radio-hover.png"),
        radio-checked:                        inline-image("#{$dark-icons}/radio-checked.png"),
        radio-disabled:                       inline-image("#{$dark-icons}/radio-disabled.png"),
        radio-checked-disabled:               inline-image("#{$dark-icons}/radio-checked-disabled.png"),

        // -- Combo Box
        check:                                inline-image("#{$dark-icons}/check.png"),

        // -- Spin Box
        arrow-up:                             inline-image("#{$dark-icons}/arrow-up.png"),
        arrow-up-active:                      inline-image("#{$dark-icons}/arrow-up-active.png"),
        arrow-down:                           inline-image("#{$dark-icons}/arrow-down.png"),
        arrow-down-active:                    inline-image("#{$dark-icons}/arrow-down-active.png"),

        // Property Panels
        panel-splitter-cursor-hover:          inline-image("#{$icons}/splitter-cursor.png"),
        panel-splitter-vertical-cursor-hover: inline-image("#{$icons}/splitter-vertical-cursor.png"),

        // Scrollbar
        scroll-caret-down:                    inline-image("#{$dark-icons}/scroll-caret-down.png"),
        scroll-caret-down-hover:              inline-image("#{$dark-icons}/scroll-caret-down-hover.png"),
        scroll-caret-down-active:             inline-image("#{$dark-icons}/scroll-caret-down-hover.png"),

        remove:                               inline-image("#{$dark-icons}/remove.png"),
        target:                               inline-image("#{$dark-icons}/target.png"),

);

$button-standard-box-shadow:        0 1px 1px 0 map_get($color-palette, button-standard-shadow-inset) inset,
                                    0 1px 3px 0 map_get($color-palette, button-standard-shadow),
                                    0 1px 0px 0 map_get($color-palette, button-standard-shadow);

$button-standard-hover-box-shadow:  0 1px 1px 0 map_get($color-palette, button-standard-hover-shadow-inset) inset,
                                    0 1px 3px 0 map_get($color-palette, button-standard-shadow),
                                    0 1px 0px 0 map_get($color-palette, button-standard-shadow);

$button-standard-active-box-shadow: 0 1px 3px 0 map_get($color-palette, button-standard-shadow),
                                    0 1px 0px 0 map_get($color-palette, button-standard-shadow);

$button-standard-checked-box-shadow:0 1px 3px 0 map_get($color-palette, button-standard-shadow),
                                    0 1px 0px 0 map_get($color-palette, button-standard-checked-shadow-inset);

$button-default-box-shadow:         0 0px 0px 1px map_get($color-palette, button-default-border-inset) inset,
                                    0 0px 4px 0 map_get($color-palette, button-default-shadow-inset) inset,
                                    0 1px 1px 0 map_get($color-palette, button-standard-shadow-inset) inset,
                                    0 1px 3px 0 map_get($color-palette, button-standard-shadow),
                                    0 1px 0px 0 map_get($color-palette, button-standard-shadow);

$button-default-hover-box-shadow:   0 0px 0px 1px map_get($color-palette, button-default-hover-border-fixed) inset,
                                    0 0px 4px 0 map_get($color-palette, button-default-shadow-inset) inset,
                                    0 1px 1px 0 map_get($color-palette, button-default-hover-shadow-inset) inset,
                                    0 1px 3px 0 map_get($color-palette, button-standard-shadow),
                                    0 1px 0px 0 map_get($color-palette, button-standard-shadow);

$button-default-active-box-shadow:  $button-standard-active-box-shadow;

$button-toolbar-active-box-shadow:  0 0px 0px 1px map_get($color-palette, button-toolbar-active-border) inset;
$button-quickaccess-active-box-shadow:  0 0px 0px 1px map_get($color-palette, button-quick-access-active-border) inset;

$toolbar-background: map_get($color-palette, nav-tab-bar-gradient-top), map_get($color-palette, nav-tab-bar-gradient-bottom);

@import "../components/_styles";
