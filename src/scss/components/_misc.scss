* {
  outline: none !important;
}

.splitter {
  position: relative;
  width: 100%;
  height: 4px;

  border: 1px solid map_get($color-palette, panel-splitter-border);
  border-right: none;
  border-left: none;

  background-color: map_get($color-palette, panel-splitter-bg);

  cursor: map_get($icon-pack, panel-splitter-cursor-hover) 7.5 8, pointer;

  transition: border 0.25s ease-in-out,
              background-color 0.25s ease-in-out;

  &:hover,
  &.is-hovered {
    background-color: map_get($color-palette, panel-splitter-bg-hover);

    &::after {
      content: '';
      display: block;
      position: absolute;
      top: -3px; right: 0; bottom: -3px; left: 0;

      border: 2px solid map_get($color-palette, panel-splitter-border-hover);
      border-right: none;
      border-left: none;
    }
  }

  &.vertical {
    width: 4px;
    height: 100%;

    border: 1px solid map_get($color-palette, panel-splitter-border);
    border-top: none;
    border-bottom: none;

    cursor: map_get($icon-pack, panel-splitter-vertical-cursor-hover) 8 7.5, pointer;

    &:hover,
    &.is-hovered {
      background-color: map_get($color-palette, panel-splitter-bg-hover);

      &::after {
        content: '';
        display: block;
        position: absolute;
        top: 0; right: -3px; bottom: 0; left: -3px;

        border: 2px solid map_get($color-palette, panel-splitter-border-hover);
        border-top: none;
        border-bottom: none;
      }

    }
  }
}



// *****SECTION #1*****: Existing Foundation control (no existing Alloy equivalents) style overrides.


//These next two input-group controls come from the Foundation Forms controls.
//They are meant to be used within an input-group.
//Which is essentiall a combo of 3 controls: label on the left, input type in the middle, and usually a submit button on the right.
//We just need to tweak there styles a bit to match the Caranu spec instead of the ugly Foundation defaults

.input-group-button input[type="button"],
.input-group-button input[type="submit"],
{
    @extend .button-standard;

    //For some reason the default input-group-button from foundation is really tall. Knowing that this is going to be next to usually a text input try and match its height.
    //Since the Alloy button-standard only sets a min-height of 32px and the Foundation input-group-button sets a height of 2.5 rem (40px) the foundation height will win unless
    height: 32px;
}

.input-group-label
{
    //The foundation input-group-label has some gray background by default. Since it is just a label let's make the border/background disappear
    background: transparent;
    border: none;
    //For some reason the default input-group-label from foundation is really tall. Knowing that this is going to be next to usually a text input try and match its height.
    height: 32px;

    //This Foundation type is really just a normal label. Pull in our Alloy base definition of lable for font family, font size, font color etc.
    @extend .label;
}

//Nice and specific style. BOTH these classes have to be present for its styling to take effect
//According to the Foundation docs here http://foundation.zurb.com/sites/docs/callout.html#coloring
//This callout class in combination with alert class is supposed to produce an "error like" notification
.callout.alert {
    // JEFF_TODO ALLOY_PR Need to leverage the existing Foundation vars for callout alerts and set their values in light/dark scheme files
    background-color: map_get($color-palette, input-text-bg-error);

    // JEFF_TODO ALLOY_PR Need to leverage the existing Foundation vars for callout alerts and set their values in light/dark scheme files
    // JEFF_TODO ALLOY_PR this makes error messages look a LOT like input boxes, is that confusing?
    // border: 1px solid map_get($color-palette, input-text-border-error);

    // JEFF_TODO ALLOY_PR Need to leverage the existing Foundation vars for callout alerts and set their values in light/dark scheme files
    color: map_get($color-palette, input-text-color);

    // Caranu spec pg. 22 padding for error text boxes calls for 9px 12px but the 9px top/bottom padding seems a little too large.
    // Plus most of our buttons and text fields and labels that errors may show up next to are total height of 32px. Padding of 4.5
    // ends up creating a default height (if the message text doesn't wrap) of 32px
    //    (bounding-box = 21px, top+bottom padding = 9px, top+bottom border = 2px)
    padding: 4.5px 12px;
    //Caranu spec doesn't call for a standard margin. Consumers will have to set their own.
    //The foundation callout is setting a weird margin bottom. Just set it to 0 and let consumers set.
    margin: 0px;

    //Pull in the Alloy standard/default for the font attributes of all controls
    @extend .alloy-controls-font;
}


// *****SECTION #2*****: New common/shared control styles that are good candidates for Alloy. Incubate them here in misc section for now?

//Style the password input type just the same as a text field for now
input[type="password"] {
    @extend input[type="text"];
}

//Separator borrowed from the property panel region separators
.separator {
    width: calc(100%);
    height: 2px;

    margin: 20px 0px;

    background-color: map_get($color-palette, panel-separator);
}

// Beginnings of a Caranu listbox style in support of kap master/details controls
ul.listbox {
  overflow: hidden;

  li {
    a {
        //Need to hide the underline on a hover if the list item happens to be implemented with an anchor
        text-decoration: none;
    }

    button {
      // If its a button the Foundation or Caranu style (background color) will show up. In the default normal state I think we just want the parent container background
      background-color: transparent;
      // Stretch the button as wide as the parent container (master list)
      display: flex;
      width: 100%;
      border-width: 0px;
    }

    span {
        // Stretch the span as wide as the parent container (master list)
        display: block;
    }

    * {
      //All list item types will share these properties

      position: relative;
      //ListBox item height = 32 px. Pg. 29 Caranu spec.
      height: 32px;

      //ListBox item height = 32 px = 9.5px padding top/bottom + 13 px sized text
      //ListBox item width = 12px padding to the left/right. Pg. 29 Caranu spec.
      padding: 9.5px 12px;

      color: map_get($color-palette, list-item-color);

      //ListBox item text size = 13px. Pg. 29 Caranu spec. JEFF_TODO This should be replaced with the appropriate Alloy variable
      font-size: 13px;
      font-family: Roboto;

    // These next 3 states are leftover from the treeview style. Not exactly sure what they do or if we need them. Let's keep them for a bit and investigate.
    //   &:after {
    //     display: none;
    //   }

    //   &:only-child {
    //     &:before {
    //       visibility: hidden;
    //     }
    //   }

    //   * {
    //     display: inline-block;

    //     margin-right: 8px;
    //   }

      &:hover,
      &.is-hovered {
        background-color: map_get($color-palette, list-item-bg-hover);
      }

      &:focus,
      &.is-focused {
        // Temp workaround in our own style to get the focus background color correct according to Caranu spec
        // This will need to stay until Alloy list-item-bg-focus is corrected to the jacksons purple color
        //background-color: map_get($color-palette, list-item-bg-focus);
        background-color: map_get($color-palette, list-item-bg-active);
      }

      &:active,
      &.is-active {
        background-color: map_get($color-palette, list-item-bg-active);
      }
    }
  }
}

// Simple circular icon buttons that aren't images but actually try to style themselves using the gradient background and text color vars so theme switching works.
.alloy-circular-buttons {
    // JEFF These two things are messing up the alignment
    //display: block;
    //height: 20px;
    width: 20px;
    line-height: 20px;

    -moz-border-radius: 10px;
    border-radius: 10px;

    @include gradientVertical(map_get($color-palette, button-standard-gradient-top), map_get($color-palette, button-standard-gradient-bottom));

    color: map_get($color-palette, header-text);
    text-align: center;
    font-size: 1em;
}


// *****SECTION #3*****: New misc/supporting styles. Content containers, regions etc. for alignment/spacing support and are not typically real instantiable controls


//Caranu standards stuff that UPro didn't provide and Alloy hasn't done yet. Should be considered to PR/merge to Alloy. Doesn't work without the !important override as something in base level div properties don't take precedence if moved here (non inline styling)
div.caranu-window-padding
{
    padding: 16px !important;
}

.readonly {
    cursor: default;
    opacity: map_get($color-palette, control-default-readonly-opacity);
}

.disabled {
    cursor: default;
    opacity: map_get($color-palette, control-default-disabled-opacity);
}
