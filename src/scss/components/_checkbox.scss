

@mixin iconSpec {
    // pg. 18, only reference to icon/text widget
    $height: 16px;
    $width: 16px;

    @include size($height, $width);
}

@mixin errorSpec {
    @include iconSpec();
    //Pull in the .alloy-ic-error class from _iconography which gets us the alloy-ic-error icon
    @extend .alloy-ic-error;

    // See Caranu spec pg. 22 TextBox error state as an example. Error icon should be 8 pixels to the right of the control it is associated with
    // NOTE: We have to override the default style (margin) we are picking up from the has-icon style.
    margin-left: 8px;
}

// Label wrapper for a checkbox, handles clicks and general styling of children based on state
.alloy-check-wrapper {
    width: max-content;

    $size: 14px;

    // Must apply cursor to itself and all children or will not be applied
    // to certain elements (like input) or in certain conditions (light theme)
    &:not(.disabled) {
        * {
            cursor: pointer;
        }
        cursor: pointer;
    }

    &.disabled {
        * {
            cursor: default;
        }
        cursor: default;
    }

    // Caranu pg 18., leveraging button
    padding-left: 12px;
    padding-right: 12px;

    &.has-error:after {
        @include errorSpec();
        content: '';
        // The global .alloy-ic-error icon is invisible by default. Consumers need to turn it on.
        display: inline-block;
        vertical-align: text-top;
    }

    &.readonly {
        cursor: default;
        opacity: map_get($color-palette, control-default-readonly-opacity);

        // Turn off all child cursors
        * {
            cursor: default;
        }
    }

    // TODO: AJM: We're missing checked/hover & checked/hover/error
    &:hover > .alloy-check:not(:disabled):not(:checked) + span {
        background: transparent map_get($icon-pack, checkbox-hover) no-repeat center center / $size;
    }

    // TODO: AJM: This hover effect is barely noticeable
    &:hover > .alloy-check.has-error:not(:disabled):not(:checked) + span{
        background: transparent map_get($icon-pack, checkbox-hover-error) no-repeat center center / $size;
    }
}

// Actual alloy checkbox.  Input content cannot be styled, so we style a label wrapper.
// Structure: <label> [span] <div (icon)> <span (text)> </label>
.alloy-check {
    position: absolute; // AJM: Remove the checkbox from the flow, also eliminates foundation concerns
    $size: 14px;
    @include size($size);
    // cursor: pointer;
    opacity: 0;         // Hide the ugly input

    // First span holds the actual check styling
    & + span {
        @include size($size);

        display: inline-block;      // Span is inline by default (no width)
        background: transparent map_get($icon-pack, checkbox) no-repeat center center / $size;
        vertical-align: text-top;
        margin-top: 1px;    // AJM: This manages the slight difference between equivalent text/check height
    }

    // The icon is defined as the background of a div
    & ~ div {
        @include iconSpec();
        margin-left: 10px;
        vertical-align: text-top;
    }

    // Last span wraps the text allowing us to determine emptiness.  If not empty we need an inner margin.
    & ~ span:last-of-type {
        &:not(:empty) {
            margin-left: 10px;
        }
    }

    &:checked + span {
        background: transparent map_get($icon-pack, checkbox-checked) no-repeat center center / $size;
    }

    &.has-error + span {
        background: transparent map_get($icon-pack, checkbox-error) no-repeat center center / $size;
    }

    &:checked.has-error + span {
        background: transparent map_get($icon-pack, checkbox-checked-error) no-repeat center center / $size;
    }

    // AJM: Custom focus styling applies even when clicked which is a poor UX.  FocusMonitor adds modality to focus.
    // This won't support focus in html.  There's a bug that fires mouse events as 'program' for nested labels right now.
    // So for now we support only keyboard, uncomment 'program' if fixed.
    &.cdk-keyboard-focused/* , &.cdk-program-focused */ + span {
        outline: 2px dashed map_get($color-palette, control-default-focus-color) /*another foundation wart -->*/!important;
    }
}

// DEPRECATED (Target 1.0.0) Legacy checkbox wrapper
.checkbox-container {
    display: flex;
    align-items: center;

    label {
      // See Caranu spec pg. 18 Graphic button as an example. Label should be 10 pixels to the right of any left icon associated with it
      margin-left: 10px;
    }

    .has-icon {
      @include iconSpec();
      cursor: default;

      // See Caranu spec pg. 18 Graphic button as an example. Label should be 10 pixels to the right of any left icon associated with it
      margin-left: 10px;
    }

    .has-error {
      @include errorSpec();
      //The global .alloy-ic-error icon is invisible by default. Consumers need to turn it on.
      display: block;
    }

    &.readonly {
      cursor: default;
      opacity: map_get($color-palette, control-default-readonly-opacity);
    }

    &.disabled {
      cursor: default;
      opacity: map_get($color-palette, control-default-disabled-opacity);
    }
  }

  // DEPRECATED (Target 1.0.0) Legacy checkbox
  .checkbox {
      $size: 14px;

      &,
      * {
        @include size($size);
      }

      input[type="checkbox"] {
        &+ span {
          margin: 0;

          display:inline-block;
          vertical-align: top;

          background: transparent map_get($icon-pack, checkbox) no-repeat center center / $size;
        }

        &.is-hovered + span {
          background: transparent map_get($icon-pack, checkbox-hover) no-repeat center center / $size;
        }

        &.has-error + span {
          background: transparent map_get($icon-pack, checkbox-error) no-repeat center center / $size;
        }

        &.is-hovered.has-error + span{
          background: transparent map_get($icon-pack, checkbox-hover-error) no-repeat center center / $size;
        }

        &.hover-disable {
          cursor: default;
        }

        &:checked + span {
          background: transparent map_get($icon-pack, checkbox-checked) no-repeat center center / $size;
        }

        &:checked.has-error + span {
            background: transparent map_get($icon-pack, checkbox-checked-error) no-repeat center center / $size;
          }
      }
  }
